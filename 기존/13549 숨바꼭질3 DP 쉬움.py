N, K = map(int,input().split())

Map=[0]*100001
for i in range(N):
    Map[i]=N-i

for i in range(N+1,100001):
    if i%2==0:
        Map[i]=min(Map[i-1]+1,Map[i//2])
        if Map[i]<Map[i-1]:
            Map[i-1]=Map[i]+1
    else:
        Map[i]=Map[i-1]+1
print(Map[K])


#DP문제이다.
#시작점보다 왼쪽에 있는 점들은 무조건 -1로만 갈 수 있으므로 값이 정해진다.
#시작점보다 오른쪽인 경우 홀수라면 일단 왼쪽값+1을 준다.
#짝수라면 왼쪽값+1과 반토막 수 중에서 작은 것을 준다.
#이러면 홀수값에서 왼쪽값이 오른쪽값보다 더 클 경우 문제가 생긴다.
#하지만 DP테이블을 순서대로 채워나가는 중이므로 이를 홀수값에서 처리할 수가 없다.
#따라서 다음 짝수값까지 일단 처리를 한 다음에 왼쪽의 홀수값을 줄일 수 있으면 줄인다.