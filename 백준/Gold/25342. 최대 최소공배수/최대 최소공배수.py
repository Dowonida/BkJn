# 해설판
import sys
input=sys.stdin.readline
# 개념 1. lcm(a,b) = a*b/gcd(a,b)이다.
# 개념 2. gcd(a,b) = gcd(a,a-b)이다.

# 아이디어 1. 1차이나는 숫자는 겹치는 인수가 없다.
#     따라서 (a,a-1), (a-1,a-2)의 최대공약수는 각각 1이다.
#     즉 lcm(a,a-1,a-2) = a*(a-1)*(a-2)/gcd(a,a-2)이며,
#     gcd(a,a-2)는 1 또는 2이므로 gcd(a,a-2)가 1이라면 가장 큰 조합이 된다.
#     a가 홀수라면 gcd가 2가 될 수 없으므로 a(a-1)(a-2)가 답이다.

# 아이디어 2. 첫 번째 분기를 통과했다면 a-1은 홀수이다.
#    따라서 a-1과 a-3은 서로소이다.
#    gcd(a,a-3)은 1 또는 3이므로 gcd(a,a-3)이 1이라면 가장 큰 조합이 된다.
#    a가 3의 배수가 아니라면 gcd(a,a-3) = 1이고, lcm(a,a-1,a-3) = a(a-1)(a-3)이 된다.

# 아이디어 3. 남은 경우의 수를 생각해보자.
#    1) a를 포함하지 않는 경우
#    2) a를 포함하고 공통인수로 나누어지지 않는 경우
#    3) a를 포함하고 공통인수로 나누어지는 경우
# 1)의 경우 가장 큰 수를 a-1로 두면 1번 분기에 걸리게 된다. 따라서 (a-1)(a-2)(a-3)이 가장 크다.
# 2)의 경우 a(a-1)(a-5)
# 3)의 경우 a(a-1)(a-2)//2가 가장 큰 조합이 된다.

# 1)과 2)의 비교 : (a-1)로 나누고나면 1)이 항상 6만큼 더 크다.
# 1)과 3)의 비교 : 1) < 3)이라는 말은 a-3 < a/2 즉 a<6인 경우이다.
#                 이 경우는 코드 상에서 앞의 분기에 해당한다.
# 따라서 1) 경우가 가장 크다.

for _ in range(int(input())):
    a=int(input())
    if a%2:
        print(a*(a-1)*(a-2))
    elif a%3:
        print( a*(a-1)*(a-3))
    else:
        print((a-1)*(a-2)*(a-3))
        
